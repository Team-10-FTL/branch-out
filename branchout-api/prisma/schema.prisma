generator client {
  provider      = "prisma-client-js"
  output        = "../generated/prisma"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int          @id @default(autoincrement())
  username       String       @unique
  email          String       @unique
  password       String?
  clerkId        String?      @unique
  provider       Provider     @default(local)
  role           Role         @default(USER)
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  languages      String[]
  skill          SkillLevel[]
  preferenceTags String[]
  feedback       FeedBack[]
  savedRepos     Repo[]       @relation("savedRepos")
  hasCompletedOnboarding Boolean?      @default(false)
}

model Repo {
  id           Int          @id @default(autoincrement())
  owner        String
  name         String
  stars        Int
  languages    String[]
  tags         String[]
  topics       String[]
  summary      String
  description  String
  repoLink     String
  skill        SkillLevel[]  @default([FOURTHYEAR])
  githubId     Int          @unique
  summaryTitle String
  feedBack     FeedBack[]
  savedBy      User[]       @relation("savedRepos")
}

model FeedBack {
  id             Int       @id @default(autoincrement())
  userId         Int
  repoId         Int
  swipeDirection String
  feedbackReason Critique?
  repo           Repo      @relation(fields: [repoId], references: [id], onDelete: Cascade)
  user           User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum SkillLevel {
  FIRSTYEAR
  SECONDYEAR
  THIRDYEAR
  FOURTHYEAR
}

enum Provider {
  local
  clerk
}

enum Role {
  USER
  ADMIN
}

enum Critique {
  NOTINTERESTED
  MISLEADING
  TOOCOMPLEX
  TOOEASY
}

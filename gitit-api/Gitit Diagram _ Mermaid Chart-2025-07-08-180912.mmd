---
config:
  layout: elk
  theme: mc
  look: neo
---
flowchart TD
 subgraph subGraph0["Auth Flow"]
        AF2["hybridAuth Middleware"]
        AF1["Client Request"]
        AF3["requireLocalAuth"]
        AF4["JWT Verification"]
        AF5["Protected Route Access"]
  end
 subgraph subGraph1["Database Schema"]
        DB1a["id, userName, email, role, provider"]
        DB1["User"]
        DB2a["id, name, owner, stars, languages"]
        DB2["Repo"]
        DB3a["id, userId, repoId, swipeDirection"]
        DB3["FeedBack"]
  end
 subgraph subGraph2["API Endpoints"]
        C1b["signup"]
        API1["/auth/signup"]
        C1a["login"]
        API2["/auth/login"]
        C1c["createAdmin"]
        API3["/auth/createAdmin"]
        F2a["GET /protected - Admin Only"]
        API4["/api/protected"]
  end
    A["gitit-api"] --> B["src/"] & C["controllers/"] & D["middleware/"] & E["models/"] & F["routes/"] & G["prisma/"] & H["data/"] & I["generated/"] & J["Configuration Files"]
    B --> B1["server.js - Main Entry Point"] & B2["db/db.js - Empty"]
    C --> C1["authController.js"]
    C1 --> C1a & C1b & C1c & C1d["hashPasswords"] & C1e["comparePasswords"]
    D --> D1["hybridAuth.js - Auth Router"] & D2["requireLocalAuth.js - JWT Verification"] & D3["clerkAuth.js - Clerk Placeholder"]
    E --> E1["app.js - Express App"] & E2["prismaClient.js - Database Client"]
    F --> F1["authRoute.js"] & F2["protected.js"]
    F1 --> F1a["POST /signup"] & F1b["POST /login"] & F1c["POST /createAdmin"]
    F2 --> F2a & n1["Untitled Node"]
    G --> G1["schema.prisma"] & G2["migrations/"]
    G1 --> G1a["User Model"] & G1b["Repo Model"] & G1c["FeedBack Model"] & G1d["Provider Enum"] & G1e["Role Enum"]
    I --> I1["prisma/ - Generated Client"]
    J --> J1[".env - Environment Variables"] & J2["package.json - Dependencies"] & J3[".gitignore - Git Ignore Rules"] & J4["seed.js - Empty"]
    AF1 --> AF2
    AF2 --> AF3
    AF3 --> AF4
    AF4 --> AF5
    DB1 --> DB1a
    DB2 --> DB2a
    DB3 --> DB3a
    DB1 -.-> DB3
    DB2 -.-> DB3
    API1 --> C1b
    API2 --> C1a
    API3 --> C1c
    API4 --> F2a
     C1b:::controller
     C1a:::controller
     C1c:::controller
     F2a:::route
     C1:::controller
     C1d:::controller
     C1e:::controller
     D1:::middleware
     D2:::middleware
     D3:::middleware
     E1:::model
     E2:::model
     F1:::route
     F2:::route
     F1a:::route
     F1b:::route
     F1c:::route
     J1:::config
     J2:::config
     J3:::config
     J4:::config
    classDef controller fill:#e1f5fe
    classDef middleware fill:#f3e5f5
    classDef model fill:#e8f5e8
    classDef route fill:#fff3e0
    classDef config fill:#fce4ec
